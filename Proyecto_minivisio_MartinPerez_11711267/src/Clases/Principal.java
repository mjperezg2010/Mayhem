/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.


Cambios
Diagrama flujo
-- letra blanca
-- eliminar figura


Diagrama de clases


los dos
- moverlos una vez cargados












 */
package Clases;

import Administracon.AdminClases;
import Administracon.AdminFlujo;
import Administracon.Guardarpic;
import Administracon.Imprimirpanel;
import Clasearboles.CodigoA;
import Clasesfiguralabel.FinClase;
import Clasesfiguralabel.Inicio;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.image.ImageObserver;
import java.text.AttributedCharacterIterator;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import Clasesfiguralabel.*;
import java.awt.GraphicsEnvironment;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JTree;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author mjper
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
      //  try{
            
      //  }catch(Exception e){
            this.setIconImage(new ImageIcon(getClass().getResource("../icon/icono.jpg")).getImage()); 
       // }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jddiagramaflujo = new javax.swing.JDialog();
        panel1 = new java.awt.Panel();
        jLabel3 = new javax.swing.JLabel();
        jb_ovalo = new javax.swing.JButton();
        jb_paralelogramo = new javax.swing.JButton();
        jb_vertical = new javax.swing.JButton();
        jb_rombo = new javax.swing.JButton();
        jb_rectangulo = new javax.swing.JButton();
        jb_resultado = new javax.swing.JButton();
        jb_derecha = new javax.swing.JButton();
        jb_izquierda = new javax.swing.JButton();
        bt_cerrarciclo = new javax.swing.JButton();
        bt_codigo = new javax.swing.JButton();
        panelfiguras = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jl_variables1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Gestor_bt = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        Neuvod = new javax.swing.JMenuItem();
        Abrird = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        Guardarcomod = new javax.swing.JMenuItem();
        guardarf = new javax.swing.JMenuItem();
        Imprimirdf = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jpp_paralelogramo = new javax.swing.JPopupMenu();
        jpp_texto_paralelogramo = new javax.swing.JMenuItem();
        jpp_color_paralelogramo = new javax.swing.JMenuItem();
        Eliminarparalelogramo = new javax.swing.JMenuItem();
        copiard = new javax.swing.JMenuItem();
        Fuente_paralelogramo = new javax.swing.JMenuItem();
        jpp_ovalo = new javax.swing.JPopupMenu();
        jpp_color_ovalo = new javax.swing.JMenuItem();
        eliminarovalo = new javax.swing.JMenuItem();
        copiard1 = new javax.swing.JMenuItem();
        Fuente_ovalo = new javax.swing.JMenuItem();
        jpp_rombo = new javax.swing.JPopupMenu();
        jpp_texto_rombo = new javax.swing.JMenuItem();
        jpp_color_rombo = new javax.swing.JMenuItem();
        jpp_tipo = new javax.swing.JMenuItem();
        eliminarrombo = new javax.swing.JMenuItem();
        copiard2 = new javax.swing.JMenuItem();
        Fuente_rombo = new javax.swing.JMenuItem();
        jpp_rectangulo = new javax.swing.JPopupMenu();
        jpp_texto_rectangulo = new javax.swing.JMenuItem();
        jpp_color_rectangulo = new javax.swing.JMenuItem();
        eliminarrombo1 = new javax.swing.JMenuItem();
        copiard3 = new javax.swing.JMenuItem();
        Fuente_rectangulo = new javax.swing.JMenuItem();
        jpp_resultado = new javax.swing.JPopupMenu();
        jpp_color_resultado = new javax.swing.JMenuItem();
        jpp_text0_resultado = new javax.swing.JMenuItem();
        jpp_tipoimpresion = new javax.swing.JMenuItem();
        eliminarrombo2 = new javax.swing.JMenuItem();
        copiard4 = new javax.swing.JMenuItem();
        Fuente_resultado = new javax.swing.JMenuItem();
        jd_opcion = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jb_diagramaflujonuevo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        variables = new javax.swing.JDialog();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cb_tiposvariable = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_nombrevariable = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jd_asignarvariable = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jl_variables = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        imagen2 = new javax.swing.JLabel();
        Condicional_mientras = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        cb_condicion = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jd_asignarvariableresultado = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        jl_variables2 = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jt_textoi = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        imagen3 = new javax.swing.JLabel();
        jd_codigogenerado = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        tp_codigodiagrama = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        Diagrama_UML = new javax.swing.JDialog();
        paneluml = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        Nuevo = new javax.swing.JMenuItem();
        Abrir = new javax.swing.JMenuItem();
        guradacomo = new javax.swing.JMenuItem();
        gu = new javax.swing.JMenuItem();
        gft = new javax.swing.JMenuItem();
        imprimirdc = new javax.swing.JMenuItem();
        pop_Clases = new javax.swing.JPopupMenu();
        atributoadd = new javax.swing.JMenuItem();
        metodoadd = new javax.swing.JMenuItem();
        coloruml = new javax.swing.JMenuItem();
        claseuml = new javax.swing.JMenuItem();
        elomiarc = new javax.swing.JMenuItem();
        copiarclase = new javax.swing.JMenuItem();
        fuentec = new javax.swing.JMenuItem();
        atributosuml = new javax.swing.JDialog();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tf_nombreatributo = new javax.swing.JTextField();
        cb_tipouml = new javax.swing.JComboBox<>();
        cb_encasulamiento = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        metodosuml = new javax.swing.JDialog();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jt_nom = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cb_encasulamiento1 = new javax.swing.JComboBox<>();
        cb_tipouml1 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jt_parametro = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        agregarmetodo = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        codigoclases = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tp_codigoclases = new javax.swing.JTextPane();
        pp_sep = new javax.swing.JPopupMenu();
        Colorsep = new javax.swing.JMenuItem();
        jd_herencia = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jl_herencia1 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jl_herencia2 = new javax.swing.JList<>();
        bt_hacerherencia = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jd_gestord = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jl_gestor1 = new javax.swing.JList<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        jl_gestor2 = new javax.swing.JList<>();
        jButton16 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        ppflecha = new javax.swing.JPopupMenu();
        eliminarrombo3 = new javax.swing.JMenuItem();
        copiard5 = new javax.swing.JMenuItem();
        ppflechad = new javax.swing.JPopupMenu();
        eliminarrombo4 = new javax.swing.JMenuItem();
        copiard6 = new javax.swing.JMenuItem();
        ppflechai = new javax.swing.JPopupMenu();
        eliminarrombo5 = new javax.swing.JMenuItem();
        copiard7 = new javax.swing.JMenuItem();
        pegar = new javax.swing.JPopupMenu();
        pegard = new javax.swing.JMenuItem();
        pegar1 = new javax.swing.JPopupMenu();
        pegard1 = new javax.swing.JMenuItem();
        jd_fuentes = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        sp_tamaño = new javax.swing.JSpinner();
        colorboton1 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jddiagramaflujo.setTitle("Diagrama de flujo");
        jddiagramaflujo.setBackground(new java.awt.Color(0, 0, 0));
        jddiagramaflujo.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(51, 204, 255));
        panel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel3.setText("Figuras");
        panel1.add(jLabel3);
        jLabel3.setBounds(110, 20, 100, 29);

        jb_ovalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/Ovalo.jpg"))); // NOI18N
        jb_ovalo.setEnabled(false);
        jb_ovalo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ovaloMouseClicked(evt);
            }
        });
        panel1.add(jb_ovalo);
        jb_ovalo.setBounds(50, 70, 60, 30);

        jb_paralelogramo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/Paralelogramo.jpg"))); // NOI18N
        jb_paralelogramo.setEnabled(false);
        jb_paralelogramo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_paralelogramoMouseClicked(evt);
            }
        });
        panel1.add(jb_paralelogramo);
        jb_paralelogramo.setBounds(180, 60, 50, 33);

        jb_vertical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/flecha.jpg"))); // NOI18N
        jb_vertical.setEnabled(false);
        jb_vertical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_verticalMouseClicked(evt);
            }
        });
        panel1.add(jb_vertical);
        jb_vertical.setBounds(70, 240, 20, 43);

        jb_rombo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/Rombo.jpg"))); // NOI18N
        jb_rombo.setEnabled(false);
        jb_rombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_romboMouseClicked(evt);
            }
        });
        panel1.add(jb_rombo);
        jb_rombo.setBounds(200, 110, 30, 37);

        jb_rectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/Rectangulo.jpg"))); // NOI18N
        jb_rectangulo.setEnabled(false);
        jb_rectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_rectanguloMouseClicked(evt);
            }
        });
        panel1.add(jb_rectangulo);
        jb_rectangulo.setBounds(130, 160, 40, 33);

        jb_resultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/figuraproceso.jpg"))); // NOI18N
        jb_resultado.setEnabled(false);
        jb_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_resultadoMouseClicked(evt);
            }
        });
        panel1.add(jb_resultado);
        jb_resultado.setBounds(60, 120, 40, 45);

        jb_derecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/flechaderecha.jpg"))); // NOI18N
        jb_derecha.setEnabled(false);
        jb_derecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_derechaMouseClicked(evt);
            }
        });
        panel1.add(jb_derecha);
        jb_derecha.setBounds(120, 250, 40, 23);

        jb_izquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/izquierda.jpg"))); // NOI18N
        jb_izquierda.setEnabled(false);
        jb_izquierda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_izquierdaMouseClicked(evt);
            }
        });
        panel1.add(jb_izquierda);
        jb_izquierda.setBounds(200, 250, 30, 31);

        bt_cerrarciclo.setText("Cerrar ciclo o condicion actual");
        bt_cerrarciclo.setToolTipText("");
        bt_cerrarciclo.setEnabled(false);
        bt_cerrarciclo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cerrarcicloMouseClicked(evt);
            }
        });
        bt_cerrarciclo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cerrarcicloActionPerformed(evt);
            }
        });
        panel1.add(bt_cerrarciclo);
        bt_cerrarciclo.setBounds(40, 320, 220, 25);

        jddiagramaflujo.getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 310, 370));

        bt_codigo.setText("Generar codigo");
        bt_codigo.setEnabled(false);
        bt_codigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_codigoMouseClicked(evt);
            }
        });
        bt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_codigoActionPerformed(evt);
            }
        });
        jddiagramaflujo.getContentPane().add(bt_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, -1));

        panelfiguras.setBackground(new java.awt.Color(255, 255, 255));
        panelfiguras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelfigurasMouseClicked(evt);
            }
        });
        panelfiguras.setLayout(null);
        jddiagramaflujo.getContentPane().add(panelfiguras, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 700, 890));

        jButton3.setText("Crear Nueva Variable");
        jButton3.setEnabled(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jddiagramaflujo.getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 160, 30));

        jl_variables1.setModel(new DefaultListModel());
        jScrollPane4.setViewportView(jl_variables1);

        jddiagramaflujo.getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 520, 110, -1));

        jLabel2.setText("Variables");
        jddiagramaflujo.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 500, -1, -1));
        jddiagramaflujo.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        jddiagramaflujo.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));
        jddiagramaflujo.getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Gestor_bt.setText("Gestor Diagrama");
        Gestor_bt.setEnabled(false);
        Gestor_bt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Gestor_btMouseClicked(evt);
            }
        });
        jddiagramaflujo.getContentPane().add(Gestor_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 160, 30));

        jMenu3.setText("Diagrama");

        Neuvod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        Neuvod.setText("Nuevo");
        Neuvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NeuvodActionPerformed(evt);
            }
        });
        jMenu3.add(Neuvod);

        Abrird.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        Abrird.setText("Abrir");
        Abrird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirdActionPerformed(evt);
            }
        });
        jMenu3.add(Abrird);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Guardar");
        jMenuItem1.setEnabled(false);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        Guardarcomod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Guardarcomod.setText("Guardar Como");
        Guardarcomod.setEnabled(false);
        Guardarcomod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarcomodActionPerformed(evt);
            }
        });
        jMenu3.add(Guardarcomod);

        guardarf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        guardarf.setText("Guardar Formato");
        guardarf.setEnabled(false);
        guardarf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarfActionPerformed(evt);
            }
        });
        jMenu3.add(guardarf);

        Imprimirdf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        Imprimirdf.setText("Imprimir");
        Imprimirdf.setEnabled(false);
        Imprimirdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirdfActionPerformed(evt);
            }
        });
        jMenu3.add(Imprimirdf);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jddiagramaflujo.setJMenuBar(jMenuBar2);

        jpp_texto_paralelogramo.setText("Asignar Variable");
        jpp_texto_paralelogramo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_texto_paralelogramoActionPerformed(evt);
            }
        });
        jpp_paralelogramo.add(jpp_texto_paralelogramo);

        jpp_color_paralelogramo.setText("Color");
        jpp_color_paralelogramo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_color_paralelogramoActionPerformed(evt);
            }
        });
        jpp_paralelogramo.add(jpp_color_paralelogramo);

        Eliminarparalelogramo.setText("Eliminar");
        Eliminarparalelogramo.setToolTipText("");
        Eliminarparalelogramo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarparalelogramoActionPerformed(evt);
            }
        });
        jpp_paralelogramo.add(Eliminarparalelogramo);

        copiard.setText("Copiar");
        copiard.setToolTipText("");
        copiard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiardActionPerformed(evt);
            }
        });
        jpp_paralelogramo.add(copiard);

        Fuente_paralelogramo.setText("Fuente");
        Fuente_paralelogramo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fuente_paralelogramoActionPerformed(evt);
            }
        });
        jpp_paralelogramo.add(Fuente_paralelogramo);

        jpp_color_ovalo.setText("Color");
        jpp_color_ovalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_color_ovaloActionPerformed(evt);
            }
        });
        jpp_ovalo.add(jpp_color_ovalo);

        eliminarovalo.setText("Eliminar");
        eliminarovalo.setToolTipText("");
        eliminarovalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarovaloActionPerformed(evt);
            }
        });
        jpp_ovalo.add(eliminarovalo);

        copiard1.setText("Copiar");
        copiard1.setToolTipText("");
        copiard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard1ActionPerformed(evt);
            }
        });
        jpp_ovalo.add(copiard1);

        Fuente_ovalo.setText("Fuente");
        Fuente_ovalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fuente_ovaloActionPerformed(evt);
            }
        });
        jpp_ovalo.add(Fuente_ovalo);

        jpp_texto_rombo.setText("Texto");
        jpp_texto_rombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_texto_romboActionPerformed(evt);
            }
        });
        jpp_rombo.add(jpp_texto_rombo);

        jpp_color_rombo.setText("Color");
        jpp_color_rombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_color_romboActionPerformed(evt);
            }
        });
        jpp_rombo.add(jpp_color_rombo);

        jpp_tipo.setText("EleccionTipo");
        jpp_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_tipoActionPerformed(evt);
            }
        });
        jpp_rombo.add(jpp_tipo);

        eliminarrombo.setText("Eliminar");
        eliminarrombo.setToolTipText("");
        eliminarrombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarromboActionPerformed(evt);
            }
        });
        jpp_rombo.add(eliminarrombo);

        copiard2.setText("Copiar");
        copiard2.setToolTipText("");
        copiard2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard2ActionPerformed(evt);
            }
        });
        jpp_rombo.add(copiard2);

        Fuente_rombo.setText("Fuente");
        Fuente_rombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fuente_romboActionPerformed(evt);
            }
        });
        jpp_rombo.add(Fuente_rombo);

        jpp_texto_rectangulo.setText("Texto");
        jpp_texto_rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_texto_rectanguloActionPerformed(evt);
            }
        });
        jpp_rectangulo.add(jpp_texto_rectangulo);

        jpp_color_rectangulo.setText("Color");
        jpp_color_rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_color_rectanguloActionPerformed(evt);
            }
        });
        jpp_rectangulo.add(jpp_color_rectangulo);

        eliminarrombo1.setText("Eliminar");
        eliminarrombo1.setToolTipText("");
        eliminarrombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrombo1ActionPerformed(evt);
            }
        });
        jpp_rectangulo.add(eliminarrombo1);

        copiard3.setText("Copiar");
        copiard3.setToolTipText("");
        copiard3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard3ActionPerformed(evt);
            }
        });
        jpp_rectangulo.add(copiard3);

        Fuente_rectangulo.setText("Fuente");
        Fuente_rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fuente_rectanguloActionPerformed(evt);
            }
        });
        jpp_rectangulo.add(Fuente_rectangulo);

        jpp_color_resultado.setText("Color");
        jpp_color_resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_color_resultadoActionPerformed(evt);
            }
        });
        jpp_resultado.add(jpp_color_resultado);

        jpp_text0_resultado.setText("Texto");
        jpp_text0_resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_text0_resultadoActionPerformed(evt);
            }
        });
        jpp_resultado.add(jpp_text0_resultado);

        jpp_tipoimpresion.setText("Tipo de impresion");
        jpp_tipoimpresion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpp_tipoimpresionActionPerformed(evt);
            }
        });
        jpp_resultado.add(jpp_tipoimpresion);

        eliminarrombo2.setText("Eliminar");
        eliminarrombo2.setToolTipText("");
        eliminarrombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrombo2ActionPerformed(evt);
            }
        });
        jpp_resultado.add(eliminarrombo2);

        copiard4.setText("Copiar");
        copiard4.setToolTipText("");
        copiard4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard4ActionPerformed(evt);
            }
        });
        jpp_resultado.add(copiard4);

        Fuente_resultado.setText("Fuente");
        Fuente_resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fuente_resultadoActionPerformed(evt);
            }
        });
        jpp_resultado.add(Fuente_resultado);

        jd_opcion.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_diagramaflujonuevo.setBackground(new java.awt.Color(255, 255, 255));
        jb_diagramaflujonuevo.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jb_diagramaflujonuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/iconobo.png"))); // NOI18N
        jb_diagramaflujonuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_diagramaflujonuevoMouseClicked(evt);
            }
        });
        jPanel2.add(jb_diagramaflujonuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 210, 210));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FigurasDiagramaFlujo/clasesd.png"))); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 210, 210));

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Diagrama de flujo");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("UML de clases");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Diagramas");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        jd_opcion.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 460));

        variables.setBackground(new java.awt.Color(102, 255, 255));
        variables.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setBackground(new java.awt.Color(204, 204, 204));
        jButton4.setText("Agregar Variable");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        variables.getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 130, 20));

        jLabel4.setFont(new java.awt.Font("Stencil", 3, 24)); // NOI18N
        jLabel4.setText("Variables");
        variables.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        cb_tiposvariable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "char", "bool", "float", "long int", "double", "string", " " }));
        variables.getContentPane().add(cb_tiposvariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel5.setText("Tipo de variable");
        variables.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 100, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setText("Nombre");
        variables.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 60, -1));
        variables.getContentPane().add(tf_nombrevariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 140, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/C-1-400x400.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        variables.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        jd_asignarvariable.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_variables.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(jl_variables);

        jd_asignarvariable.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 110, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel9.setText("Asignar");
        jd_asignarvariable.getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 100, -1));

        jButton5.setText("Asignar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jd_asignarvariable.getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, -1));

        imagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/C-1-400x400.jpg"))); // NOI18N
        imagen2.setText("jLabel8");
        jd_asignarvariable.getContentPane().add(imagen2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 400));

        Condicional_mientras.setBackground(new java.awt.Color(51, 153, 255));
        Condicional_mientras.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Aceptar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, 30));

        cb_condicion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Condicional", "Ciclo" }));
        jPanel1.add(cb_condicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        jLabel8.setText("Opciones para figura");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 120, 20));

        Condicional_mientras.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 160));

        jd_asignarvariableresultado.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_variables2.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(jl_variables2);

        jd_asignarvariableresultado.getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 110, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel10.setText("Asignar");
        jd_asignarvariableresultado.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 100, -1));

        jButton6.setText("Asignar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jd_asignarvariableresultado.getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, -1, -1));
        jd_asignarvariableresultado.getContentPane().add(jt_textoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 80, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel38.setText("Texto");
        jd_asignarvariableresultado.getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        imagen3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/C-1-400x400.jpg"))); // NOI18N
        imagen3.setText("jLabel8");
        jd_asignarvariableresultado.getContentPane().add(imagen3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 400));

        jd_codigogenerado.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tp_codigodiagrama.setEditable(false);
        tp_codigodiagrama.setColumns(20);
        tp_codigodiagrama.setRows(5);
        jScrollPane1.setViewportView(tp_codigodiagrama);

        jd_codigogenerado.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 500, 460));

        jLabel11.setText("Codigo");
        jd_codigogenerado.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, -1));

        jButton7.setText("Editar");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jd_codigogenerado.getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 560, 80, 60));

        Diagrama_UML.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paneluml.setBackground(new java.awt.Color(102, 102, 102));
        paneluml.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelumlMouseClicked(evt);
            }
        });
        paneluml.setLayout(null);
        Diagrama_UML.getContentPane().add(paneluml, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 940, 720));

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Nueva Clase");
        jButton8.setEnabled(false);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jPanel6.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 160, 70));

        jButton11.setText("Generar Codigo");
        jButton11.setEnabled(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jPanel6.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 150, 80));

        jButton13.setText("Herencia");
        jButton13.setEnabled(false);
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });
        jPanel6.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 140, 90));

        Diagrama_UML.getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 220, 440));

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Separadores");
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jButton10.setBackground(new java.awt.Color(204, 204, 204));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconitos/separador.png"))); // NOI18N
        jButton10.setEnabled(false);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jPanel7.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconitos/separadorV.png"))); // NOI18N
        jButton12.setEnabled(false);
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jPanel7.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 40));

        Diagrama_UML.getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 210, 280));

        jMenu5.setText("Archivo");

        Nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        Nuevo.setText("Nuevo");
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });
        jMenu5.add(Nuevo);

        Abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        jMenu5.add(Abrir);

        guradacomo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        guradacomo.setText("Guardar Como");
        guradacomo.setEnabled(false);
        guradacomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guradacomoActionPerformed(evt);
            }
        });
        jMenu5.add(guradacomo);

        gu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        gu.setText("Guardar");
        gu.setEnabled(false);
        gu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guActionPerformed(evt);
            }
        });
        jMenu5.add(gu);

        gft.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        gft.setText("Guardar Formato");
        gft.setEnabled(false);
        gft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gftActionPerformed(evt);
            }
        });
        jMenu5.add(gft);

        imprimirdc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        imprimirdc.setText("Imprimir");
        imprimirdc.setEnabled(false);
        imprimirdc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirdcActionPerformed(evt);
            }
        });
        jMenu5.add(imprimirdc);

        jMenuBar3.add(jMenu5);

        Diagrama_UML.setJMenuBar(jMenuBar3);

        atributoadd.setText("Agregar un atributo");
        atributoadd.setToolTipText("Click para agregar un atributo");
        atributoadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atributoaddMouseClicked(evt);
            }
        });
        atributoadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atributoaddActionPerformed(evt);
            }
        });
        pop_Clases.add(atributoadd);

        metodoadd.setText("Agregar Metodo");
        metodoadd.setToolTipText("Click para agregar metodo");
        metodoadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoaddActionPerformed(evt);
            }
        });
        pop_Clases.add(metodoadd);

        coloruml.setText("Color");
        coloruml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorumlActionPerformed(evt);
            }
        });
        pop_Clases.add(coloruml);

        claseuml.setText("Nombre de la clase");
        claseuml.setToolTipText("");
        claseuml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claseumlActionPerformed(evt);
            }
        });
        pop_Clases.add(claseuml);

        elomiarc.setText("Eliminar");
        elomiarc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elomiarcActionPerformed(evt);
            }
        });
        pop_Clases.add(elomiarc);

        copiarclase.setText("Copiar");
        pop_Clases.add(copiarclase);

        fuentec.setText("Fuente");
        fuentec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuentecActionPerformed(evt);
            }
        });
        pop_Clases.add(fuentec);

        atributosuml.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel16.setText("Atributos");
        atributosuml.getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, -1));

        jLabel17.setText("Nombre");
        atributosuml.getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));
        atributosuml.getContentPane().add(tf_nombreatributo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 80, -1));

        cb_tipouml.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "string", "bool", "char" }));
        atributosuml.getContentPane().add(cb_tipouml, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 70, -1));

        cb_encasulamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "private", "public", "protected" }));
        atributosuml.getContentPane().add(cb_encasulamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 70, -1));

        jLabel18.setText("Tipo");
        atributosuml.getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        jLabel19.setText("Encasuplamiento");
        atributosuml.getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jButton9.setBackground(new java.awt.Color(0, 51, 255));
        jButton9.setText("Agregar Atributo");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        atributosuml.getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/C-1-400x400.jpg"))); // NOI18N
        jLabel15.setText("jLabel15");
        atributosuml.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 410));

        metodosuml.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel21.setText("Metodos");
        metodosuml.getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 70, -1));

        jLabel22.setText("Nombre");
        metodosuml.getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));
        metodosuml.getContentPane().add(jt_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 80, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel23.setText("Encapsulamiento");
        metodosuml.getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        cb_encasulamiento1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "private", "public", "protected" }));
        metodosuml.getContentPane().add(cb_encasulamiento1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 70, -1));

        cb_tipouml1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "long", "float", "double", "string", "bool", "char" }));
        metodosuml.getContentPane().add(cb_tipouml1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 70, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel24.setText("Tipo");
        metodosuml.getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 40, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Parametro");
        metodosuml.getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));
        metodosuml.getContentPane().add(jt_parametro, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 100, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 51, 51));
        jLabel26.setText("*Si no desea parametros no llenar gracias");
        metodosuml.getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, -1, -1));

        agregarmetodo.setText("Agregar Metodo");
        agregarmetodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregarmetodoMouseClicked(evt);
            }
        });
        metodosuml.getContentPane().add(agregarmetodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/C-1-400x400.jpg"))); // NOI18N
        metodosuml.getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 400, 390));

        codigoclases.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Codigo C++");
        jPanel8.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, 40));

        jScrollPane2.setViewportView(tp_codigoclases);

        jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 460, 410));

        codigoclases.getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 600));

        Colorsep.setText("jMenuItem1");
        Colorsep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorsepActionPerformed(evt);
            }
        });
        pp_sep.add(Colorsep);

        jd_herencia.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(0, 51, 102));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Herencia");
        jPanel9.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jl_herencia1.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(jl_herencia1);

        jPanel9.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 120, 120));

        jl_herencia2.setModel(new DefaultListModel());
        jScrollPane7.setViewportView(jl_herencia2);

        jPanel9.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 110, -1));

        bt_hacerherencia.setText("Herencia");
        bt_hacerherencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_hacerherenciaMouseClicked(evt);
            }
        });
        jPanel9.add(bt_hacerherencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Padre");
        jPanel9.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 50, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Hija");
        jPanel9.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 30, -1));

        jButton14.setText("Actualizar Listas");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jPanel9.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        jd_herencia.getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 390));

        jd_gestord.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(0, 102, 102));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Gestor Elementos del Diagrama");
        jPanel10.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 300, -1));

        jl_gestor1.setModel(new DefaultListModel());
        jScrollPane8.setViewportView(jl_gestor1);

        jPanel10.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 120, 210));

        jl_gestor2.setModel(new DefaultListModel());
        jScrollPane9.setViewportView(jl_gestor2);

        jPanel10.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 120, 210));

        jButton16.setText("Actualizar Listas");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });
        jPanel10.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, -1, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Posicion inicial");
        jPanel10.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 130, -1));

        jLabel34.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Posicion final");
        jPanel10.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 100, -1));

        jButton17.setText("Mover");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });
        jPanel10.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, -1, -1));

        jd_gestord.getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 510));

        eliminarrombo3.setText("Eliminar");
        eliminarrombo3.setToolTipText("");
        eliminarrombo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrombo3ActionPerformed(evt);
            }
        });
        ppflecha.add(eliminarrombo3);

        copiard5.setText("Copiar");
        copiard5.setToolTipText("");
        copiard5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard5ActionPerformed(evt);
            }
        });
        ppflecha.add(copiard5);

        eliminarrombo4.setText("Eliminar");
        eliminarrombo4.setToolTipText("");
        eliminarrombo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrombo4ActionPerformed(evt);
            }
        });
        ppflechad.add(eliminarrombo4);

        copiard6.setText("Copiar");
        copiard6.setToolTipText("");
        copiard6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard6ActionPerformed(evt);
            }
        });
        ppflechad.add(copiard6);

        eliminarrombo5.setText("Eliminar");
        eliminarrombo5.setToolTipText("");
        eliminarrombo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrombo5ActionPerformed(evt);
            }
        });
        ppflechai.add(eliminarrombo5);

        copiard7.setText("Copiar");
        copiard7.setToolTipText("");
        copiard7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiard7ActionPerformed(evt);
            }
        });
        ppflechai.add(copiard7);

        pegard.setText("Pegar");
        pegard.setToolTipText("");
        pegard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegardActionPerformed(evt);
            }
        });
        pegar.add(pegard);

        pegard1.setText("Pegar");
        pegard1.setToolTipText("");
        pegard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegard1ActionPerformed(evt);
            }
        });
        pegar1.add(pegard1);

        jd_fuentes.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(102, 0, 0));
        jPanel11.setForeground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Fuentes");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 100, -1));
        jPanel11.add(sp_tamaño, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 70, 50));

        colorboton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorboton1MouseClicked(evt);
            }
        });
        jPanel11.add(colorboton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 70, 30));

        jButton19.setText("Fuente");
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton19MouseClicked(evt);
            }
        });
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, -1, -1));

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Tamaño");
        jPanel11.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Color");
        jPanel11.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, -1, -1));

        jd_fuentes.getContentPane().add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 476, 445));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eleccion de diagramas");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton20.setBackground(new java.awt.Color(0, 0, 0));
        jButton20.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 255, 255));
        jButton20.setText("Inicio");
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton20MouseClicked(evt);
            }
        });
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, 190, 80));

        jLabel39.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel39.setText("Proyecto Programacion 2 - MiniVisio");
        getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/diagrama-de-flujo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 607));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_ovaloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ovaloMouseClicked
        // TODO add your handling code here:

        if (contovalo == 0) {
            Inicio Ovalo = new Inicio();
            //JLabel Ovalo = new JLabel();
            // name.setPreferredSize(new Dimension(50, 100));
            panelfiguras.add(Ovalo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 500, 760));
            Ovalo.setIcon(new javax.swing.ImageIcon("./src/Iconitos/Ovalo.png"));
            Ovalo.setName("Mayhem" + cof);
            Ovalo.setHorizontalTextPosition(SwingConstants.CENTER);
            Ovalo.setTipo("Inicio");
            Ovalo.setOpaque(true);
            cof++;
            Ovalo.setBackground(Color.cyan);
            Ovalo.setBounds(440, 320, 100, 50);
            Ovalo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) >= 0
                            && (Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) <= 1200) {

                        Ovalo.setLocation(Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2,
                                Ovalo.getLocation().y + evt.getY() - Ovalo.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });

            Ovalo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    tempovalo = Ovalo;
                    copiar = tempovalo;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                        jpp_ovalo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempovalo = Ovalo;

                    }
                }
            });
            listafiguras.add(Ovalo);
            Ovalo.setText("Inicio");
            //Ovalo.setBackground(tempovalo.getBackground());
            contovalo++;

        } else if (contovalo == 1) {
            Inicio Ovalo = new Inicio();

            panelfiguras.add(Ovalo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 500, 760));

            Ovalo.setIcon(new javax.swing.ImageIcon("./src/Iconitos/Ovalo.png"));
            Ovalo.setTipo("Fin");

            Ovalo.setHorizontalTextPosition(SwingConstants.CENTER);
            Ovalo.setName("Mayhem" + cof);
            Ovalo.setOpaque(true);
            cof++;

            Ovalo.setBackground(Color.cyan);
            Ovalo.setBounds(440, 320, 100, 50);
            Ovalo.setToolTipText("Click derecho para propiedades");
            Ovalo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) >= 0
                            && (Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) <= 1200) {

                        Ovalo.setLocation(Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2,
                                Ovalo.getLocation().y + evt.getY() - Ovalo.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });

            Ovalo.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    tempovalo = Ovalo;
                    copiar = tempovalo;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                        jpp_ovalo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempovalo = Ovalo;

                    }
                }
            });
            listafiguras.add(Ovalo);
            Ovalo.setText("Fin");
            contovalo++;

        } else {
            JOptionPane.showMessageDialog(jddiagramaflujo, "Ya no puede ingresar mas de este tipo");
        }
    }//GEN-LAST:event_jb_ovaloMouseClicked

    private void jb_paralelogramoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_paralelogramoMouseClicked
        // TODO add your handling code here:

        Entrada_Salida Paralelogramo = new Entrada_Salida();
        panelfiguras.add(Paralelogramo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 500, 760));
        Paralelogramo.setHorizontalTextPosition(SwingConstants.CENTER);
        Paralelogramo.setIcon(new javax.swing.ImageIcon("./src/Iconitos/paralelogramo_p.png"));
        Paralelogramo.setOpaque(true);
        Paralelogramo.setName("Mayhem" + cof);
        cof++;
        Paralelogramo.setBackground(Color.ORANGE);
        Paralelogramo.setBounds(440, 320, 100, 67);
        Paralelogramo.setToolTipText("Click derecho para propiedades");
        Paralelogramo.setAgregado(true);
        Paralelogramo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {

            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2) >= 0
                        && (Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2) <= 1200) {

                    Paralelogramo.setLocation(Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2,
                            Paralelogramo.getLocation().y + evt.getY() - Paralelogramo.getHeight() / 2);

                }// para que no se salga del rango

            }
        });

        Paralelogramo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                templabelparalelogramo = Paralelogramo;
                copiar = templabelparalelogramo;
                // panelfiguras.re
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                    copiar = Paralelogramo;
                    jpp_paralelogramo.show(evtr.getComponent(), evtr.getX(), evtr.getY());

                    //Paralelogramo.setText(templabelparalelogramo.getText());
                    // Paralelogramo.setBackground(templabelparalelogramo.getBackground());
                    //Paralelogramo.setListva(templabelparalelogramo.getListva());
                    if (Paralelogramo.isAgregado()) {

                        for (JLabel t : listafiguras) {
                            if (t.getName().equals(Paralelogramo.getName())) {

                                t.setText(templabelparalelogramo.getText());
                                t.setBackground(templabelparalelogramo.getBackground());
                                //((Entrada_Salida) t).setListva(templabelparalelogramo.getListva());
                            } else {
                                //JOptionPane.showMessageDialog( "No");

                            }
                        }
                    } else {
                        listafiguras.add(Paralelogramo);
                    }

                }//Fin click dereco
            }
        });//Fin agreagar omouse listener
        templabelparalelogramo = Paralelogramo;

        listafiguras.add(Paralelogramo);

        //Paralelogramo.setBackground(templabelparalelogramo.getBackground());

    }//GEN-LAST:event_jb_paralelogramoMouseClicked

    private void jb_verticalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_verticalMouseClicked
        // TODO add your handling code here:

        Flecha name = new Flecha();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 300, 600));
        name.setLocation(20, 210);
        name.setIcon(new javax.swing.ImageIcon("./src/FigurasDiagramaFlujo/Flecha.jpg"));

        name.setLocation(new Point(30, 30));
        name.setPreferredSize(new Dimension(40, 40));
        name.setSize(50, 50);
        name.setName("Flecha Vertical" + cof);
        //name.setText("Flecha Vertical");
        cof++;
        name.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((name.getLocation().x + evt.getX() - name.getWidth() / 2) >= 0
                        && (name.getLocation().x + evt.getX() - name.getWidth() / 2) <= 1200) {

                    name.setLocation(name.getLocation().x + evt.getX() - name.getWidth() / 2,
                            name.getLocation().y + evt.getY() - name.getHeight() / 2);

                }// para que no se salga del rango

            }
        });

        name.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                tempflecha = name;
                copiar = tempflecha;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                    ppflecha.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    tempflecha = name;

                }
            }
        });

        listafiguras.add(name);

    }//GEN-LAST:event_jb_verticalMouseClicked

    private void jb_romboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_romboMouseClicked
        // TODO add your handling code here:

        Condicional rombo = new Condicional();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(rombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 600, 600));

        rombo.setBackground(Color.GREEN);
        rombo.setHorizontalTextPosition(SwingConstants.CENTER);
        rombo.setName("MAyhem" + cof);
        rombo.setOpaque(true);
        rombo.setIcon(new javax.swing.ImageIcon("./src/Iconitos/rombo_p.png"));

        rombo.setTipo("Condicional");
        rombo.setAgregado(true);
        rombo.setBounds(440, 320, 100, 67);
        rombo.setToolTipText("Click derecho para propiedades");
        rombo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2) >= 0
                        && (rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2) <= 1200) {

                    rombo.setLocation(rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2,
                            rombo.getLocation().y + evt.getY() - rombo.getHeight() / 2);

                }// para que no se salga del rango

            }
        });

        rombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                temprombo = rombo;
                copiar = temprombo;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                    jpp_rombo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    temprombo = rombo;
                    rombo.setText(temprombo.getText());
                    rombo.setBackground(temprombo.getBackground());
                    rombo.setTipo(temprombo.getTipo());

                    //Recorrer
                    if (rombo.isAgregado()) {

                        for (JLabel t : listafiguras) {
                            if (t.getName().equals(rombo.getName())) {

                                t.setText(temprombo.getText());
                                ((Condicional) t).setTipo(temprombo.getTipo());
                                t.setBackground(temprombo.getBackground());
                                //((Entrada_Salida) t).setListva(temprombo.getListva());
                            } else {
                                //JOptionPane.showMessageDialog( "No");

                            }
                        }
                    }
                }
            }
        });
        listafiguras.add(rombo);
        //rombo.setBackground(temprombo.getBackground());

    }//GEN-LAST:event_jb_romboMouseClicked

    private void jb_rectanguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_rectanguloMouseClicked
        // TODO add your handling code here:

        Procesos rectangulo = new Procesos();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(rectangulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 550, 600));

        rectangulo.setBackground(Color.red);
        rectangulo.setForeground(Color.BLACK);
        rectangulo.setName("Mayhem" + cof);
        cof++;
        rectangulo.setOpaque(true);
        rectangulo.setIcon(new javax.swing.ImageIcon("./src/Iconitos/Rectangulo_p.png"));
        rectangulo.setHorizontalTextPosition(SwingConstants.CENTER);
        rectangulo.setAgregado(true);

        rectangulo.setBounds(440, 320, 100, 67);
        rectangulo.setToolTipText("Click derecho para propiedades");
        rectangulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2) >= 0
                        && (rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2) <= 1200) {

                    rectangulo.setLocation(rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2,
                            rectangulo.getLocation().y + evt.getY() - rectangulo.getHeight() / 2);

                }// para que no se salga del rango

            }
        });
        rectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                copiar = temprectangulo;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                    jpp_rectangulo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    temprectangulo = rectangulo;
                    rectangulo.setText(temprectangulo.getText());
                    rectangulo.setBackground(temprectangulo.getBackground());
                    //Recorrer
                    if (rectangulo.isAgregado()) {

                        for (JLabel t : listafiguras) {
                            if (t.getName().equals(rectangulo.getName())) {

                                t.setText(temprectangulo.getText());
                                //((Condicional)t).setTipo(temprectangulo.getTipo());
                                t.setBackground(temprectangulo.getBackground());
                                //((Entrada_Salida) t).setListva(temprombo.getListva());
                            } else {
                                //JOptionPane.showMessageDialog( "No");

                            }
                        }
                    } else {
                        listafiguras.add(rectangulo);
                    }

                }
            }
        });
        listafiguras.add(rectangulo);
      

    }//GEN-LAST:event_jb_rectanguloMouseClicked

    private void jb_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_resultadoMouseClicked
        // TODO add your handling code here:

        Imprimir resultado = new Imprimir();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 330, 600));
        resultado.setIcon(new javax.swing.ImageIcon("./src/Iconitos/resultado_p.png"));
        resultado.setHorizontalTextPosition(SwingConstants.CENTER);
        resultado.setOpaque(true);
        resultado.setName("Mayhem" + cof);
        cof++;
        // resultado.setAgregado(true);

        resultado.setBackground(Color.PINK);
        resultado.setBounds(420, 300, 100, 67);
        resultado.setToolTipText("Click derecho para propiedades");
        resultado.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2) >= 0
                        && (resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2) <= 1200) {

                    resultado.setLocation(resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2,
                            resultado.getLocation().y + evt.getY() - resultado.getHeight() / 2);

                }// para que no se salga del rango

            }
        });
        resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                copiar = tempresultado;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                    copiar = tempresultado;
                    jpp_resultado.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    tempresultado = resultado;
                    resultado.setText(tempresultado.getText());
                    resultado.setBackground(tempresultado.getBackground());
                    resultado.setConVariable(tempresultado.isConVariable());
                    resultado.setVariable(tempresultado.getVariable());

                    //Recorrer
                    if (resultado.isAgregado()) {

                        for (JLabel t : listafiguras) {
                            if (t.getName().equals(resultado.getName())) {

                                t.setText(tempresultado.getText());
                                ((Imprimir) t).setConVariable(tempresultado.isConVariable());
                                ((Imprimir) t).setVariable(tempresultado.getVariable());
                                t.setBackground(tempresultado.getBackground());
                                //((Entrada_Salida) t).setListva(temprombo.getListva());
                            } else {
                                //JOptionPane.showMessageDialog( "No");

                            }
                        }
                    } else {
                        listafiguras.add(resultado);
                    }

                }
            }
        });
        listafiguras.add(resultado);

    }//GEN-LAST:event_jb_resultadoMouseClicked

    private void jb_derechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_derechaMouseClicked
        // TODO add your handling code here:
        Flechad derecha = new Flechad();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(derecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 330, 600));
        derecha.setLocation(20, 210);
        derecha.setIcon(new javax.swing.ImageIcon("./src/FigurasDiagramaFlujo/flechaderecha.jpg"));

        derecha.setLocation(new Point(30, 30));
        derecha.setPreferredSize(new Dimension(40, 40));
        derecha.setName("Flecha derecha" + cof);
        // derecha.setText("Flecha derecha");
        derecha.setSize(50, 50);
        cof++;
        derecha.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2) >= 0
                        && (derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2) <= 1200) {

                    derecha.setLocation(derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2,
                            derecha.getLocation().y + evt.getY() - derecha.getHeight() / 2);

                }// para que no se salga del rango

            }
        });
        derecha.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                copiar = tempflechad;
                tempflechad = derecha;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                    copiar = tempflechad;
                    ppflechad.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    tempflechad = derecha;

                }
            }
        });
        listafiguras.add(derecha);

    }//GEN-LAST:event_jb_derechaMouseClicked

    private void bt_codigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_codigoMouseClicked
        // TODO add your handling code here:
        System.out.println(copiar);
        String codigogenerado = "";
        tp_codigodiagrama.setText("");
        Codigo co = new Codigo();

        codigogenerado = "//" + nombrediagramaflujo + "\n\n";

        for (JLabel t : listafiguras) {
            if (t instanceof Condicional) {
                codigogenerado += "\n"
                        + co.Condicionalc((Condicional) t);

            } else if (t instanceof Entrada_Salida) {

                codigogenerado += "\n"
                        + co.Entrada_Salidac((Entrada_Salida) t);

            } else if (t instanceof FinCiclo) {
                codigogenerado += "\n"
                        + "}";
            } else if (t instanceof Inicio) {
                codigogenerado += "\n"
                        + co.Inicioc((Inicio) t);
            } else if (t instanceof Imprimir) {
                codigogenerado += "\n"
                        + co.imprimir((Imprimir) t);

            } else if (t instanceof Procesos) {
                codigogenerado += "\n"
                        + co.procesosc((Procesos) t);

            } else {

            }

        }//Fin for ich

        //codigoc++=codigogenerado;
        tp_codigodiagrama.setText(codigogenerado);
        this.jd_codigogenerado.setModal(true);
        jd_codigogenerado.pack();
        jd_codigogenerado.setLocationRelativeTo(this);
        jd_codigogenerado.setVisible(true);


    }//GEN-LAST:event_bt_codigoMouseClicked

    private void jpp_texto_paralelogramoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_texto_paralelogramoActionPerformed
        // TODO add your handling code here:
        this.jd_asignarvariable.setModal(true);
        jd_asignarvariable.pack();
        jd_asignarvariable.setLocationRelativeTo(this);
        jd_asignarvariable.setVisible(true);


    }//GEN-LAST:event_jpp_texto_paralelogramoActionPerformed

    private void jpp_color_paralelogramoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_color_paralelogramoActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);

        templabelparalelogramo.setBackground(cl);
    }//GEN-LAST:event_jpp_color_paralelogramoActionPerformed

    private void jpp_color_ovaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_color_ovaloActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);

        tempovalo.setBackground(cl);
    }//GEN-LAST:event_jpp_color_ovaloActionPerformed

    private void jpp_texto_romboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_texto_romboActionPerformed
        // TODO add your handling code here:
        String texto = JOptionPane.showInputDialog(jddiagramaflujo, "Ingrese un texto");
        temprombo.setText(texto);

    }//GEN-LAST:event_jpp_texto_romboActionPerformed

    private void jpp_color_romboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_color_romboActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);

        temprombo.setBackground(cl);
    }//GEN-LAST:event_jpp_color_romboActionPerformed

    private void jb_izquierdaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_izquierdaMouseClicked
        // TODO add your handling code here:
        Flechai izquierda = new Flechai();
        // name.setPreferredSize(new Dimension(50, 100));
        panelfiguras.add(izquierda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 300, 600));
        izquierda.setLocation(20, 210);
        izquierda.setIcon(new javax.swing.ImageIcon("./src/FigurasDiagramaFlujo/izquierda.jpg"));

        izquierda.setLocation(new Point(30, 30));
        izquierda.setPreferredSize(new Dimension(40, 40));
        izquierda.setSize(50, 50);
        izquierda.setName("Flecha izquierda" + cof);
        izquierda.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2) >= 0
                        && (izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2) <= 1200) {

                    izquierda.setLocation(izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2,
                            izquierda.getLocation().y + evt.getY() - izquierda.getHeight() / 2);

                }// para que no se salga del rango

            }
        });
        izquierda.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                tempflechai = izquierda;
                copiar = tempflechai;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                    copiar = tempflechai;
                    ppflechai.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    tempflechai = izquierda;

                }
            }
        });
        listafiguras.add(izquierda);

    }//GEN-LAST:event_jb_izquierdaMouseClicked

    private void jpp_texto_rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_texto_rectanguloActionPerformed
        // TODO add your handling code here:
        String mensaje = JOptionPane.showInputDialog(jddiagramaflujo, "Ingrese la operacion: ");

        temprectangulo.setText(mensaje);


    }//GEN-LAST:event_jpp_texto_rectanguloActionPerformed

    private void jpp_color_rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_color_rectanguloActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);

        temprectangulo.setBackground(cl);
    }//GEN-LAST:event_jpp_color_rectanguloActionPerformed

    private void jpp_color_resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_color_resultadoActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);
        tempresultado.setBackground(cl);
    }//GEN-LAST:event_jpp_color_resultadoActionPerformed

    private void jb_diagramaflujonuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_diagramaflujonuevoMouseClicked
        // TODO add your handling code here:
        //nombrediagramaflujo = JOptionPane.showInputDialog(jddiagramaflujo, "Ingrese nombre del diagrama");
        this.jddiagramaflujo.setModal(true);
        jddiagramaflujo.pack();
        jddiagramaflujo.setLocationRelativeTo(this);

        // jddiagramaflujo.setMaximumSize(1500, 0x5dc);
        jddiagramaflujo.setVisible(true);
        jd_opcion.setVisible(false);

    }//GEN-LAST:event_jb_diagramaflujonuevoMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:

        Variable va = new Variable(tf_nombrevariable.getText(), cb_tiposvariable.getSelectedItem().toString());
        listavariables.add(va);

        DefaultListModel modelo = (DefaultListModel) jl_variables.getModel();
        modelo.addElement(va);
        jl_variables.setModel(modelo);
        jl_variables1.setModel(modelo);
        jl_variables2.setModel(modelo);

        JOptionPane.showMessageDialog(variables, "Variable agregada");
        tf_nombrevariable.setText("");


    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        this.variables.setModal(true);
        variables.pack();
        variables.setLocationRelativeTo(this);
        variables.setVisible(true);

    }//GEN-LAST:event_jButton3MouseClicked

    private void jpp_text0_resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_text0_resultadoActionPerformed
        // TODO add your handling code here:
        String texto = JOptionPane.showInputDialog(jddiagramaflujo, "Ingrese un texto");
        tempresultado.setText(texto);
    }//GEN-LAST:event_jpp_text0_resultadoActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:

        // templabelparalelogramo.getListva().add(jl_variables.getSelectedValue());
        /* String acum = "";
        for (Variable t : templabelparalelogramo.getListva()) {
            acum += t.getNombre() + ",";
        }*/
        Variable v = jl_variables.getSelectedValue();

        templabelparalelogramo.setText(v.getTipo() + " " + v.getNombre());
        JOptionPane.showMessageDialog(jd_asignarvariable, "Variable " + jl_variables.getSelectedValue().getNombre() + " asignada con exito");

    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_condicion.getModel();
        temprombo.setTipo(modelo.getSelectedItem().toString());
        JOptionPane.showMessageDialog(Condicional_mientras, "Tipo asignado con exito");
        Condicional_mientras.setVisible(false);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jpp_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_tipoActionPerformed
        // TODO add your handling code here:
        this.Condicional_mientras.setModal(true);
        Condicional_mientras.pack();
        Condicional_mientras.setLocationRelativeTo(this);
        Condicional_mientras.setVisible(true);
    }//GEN-LAST:event_jpp_tipoActionPerformed

    private void jpp_tipoimpresionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpp_tipoimpresionActionPerformed
        // TODO add your handling code here:
       
      
           
            jd_asignarvariableresultado.setModal(true);
            jd_asignarvariableresultado.pack();
            jd_asignarvariableresultado.setLocationRelativeTo(this);
            jd_asignarvariableresultado.setVisible(true);
       

    }//GEN-LAST:event_jpp_tipoimpresionActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        // tempresultado.setVariable(jl_variables2.getSelectedValue());
        tempresultado.setText(jt_textoi.getText()+"\"" + "<<" + jl_variables2.getSelectedValue().getNombre());
        JOptionPane.showMessageDialog(jd_asignarvariableresultado, "Variable asignada con exito");
        jd_asignarvariableresultado.setVisible(false);
    }//GEN-LAST:event_jButton6MouseClicked

    private void bt_cerrarcicloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cerrarcicloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_cerrarcicloActionPerformed

    private void bt_cerrarcicloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cerrarcicloMouseClicked
        // TODO add your handling code here:
        FinCiclo fc = new FinCiclo();
        fc.setText("Fin Ciclo");
        listafiguras.add(fc);
    }//GEN-LAST:event_bt_cerrarcicloMouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        tp_codigodiagrama.setEditable(true);
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        this.Diagrama_UML.setModal(true);
        Diagrama_UML.pack();
        Diagrama_UML.setLocationRelativeTo(this);
        Diagrama_UML.setVisible(true);
        jd_opcion.setVisible(false);
    }//GEN-LAST:event_jButton2MouseClicked


    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:

        String nombrearbol = JOptionPane.showInputDialog(Diagrama_UML, "Ingrese el nombre de la clase");

        DefaultMutableTreeNode Root = new DefaultMutableTreeNode(nombrearbol);
        DefaultTreeModel modelo = new DefaultTreeModel(Root);
        JTree clase = new JTree(modelo);
        clase.setName(nombrearbol);
        // clase.set
        DefaultTreeModel m = (DefaultTreeModel) clase.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode atributos = new DefaultMutableTreeNode("Atributos");
        DefaultMutableTreeNode metodos = new DefaultMutableTreeNode("Metodos");
        raiz.add(atributos);
        raiz.add(metodos);

        marduk++;
        clase.setSize(270, 150);
        clase.setBackground(new java.awt.Color(192, 255, 243));
        clase.setBorder(BorderFactory.createLineBorder(new java.awt.Color(165, 105, 189), 1));

        clase.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                mayhemtreeactual = clase;
                copiar1 = clase;
                int row = clase.getClosestRowForLocation(evtr.getX(), evtr.getY());
                clase.setSelectionRow(row);
                Object v1 = clase.getSelectionPath().getLastPathComponent();
                nodoblackactual = (DefaultMutableTreeNode) v1;
                for (JTree t : listatrees) {
                    if (t.getName().equals(clase.getName())) {
                        t = mayhemtreeactual;
                    }

                }
                if (evtr.isMetaDown()) {
                    pop_Clases.show(evtr.getComponent(), evtr.getX(), evtr.getY());

                }
            }
        });

        paneluml.add(clase);

        clase.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mayhemtreeactual = clase;
                //txSeleccionado1.setText(modelo.getRoot().toString());

                if (((clase.getLocation().x + evt.getX() - clase.getWidth() / 2) > 5)) {
                    if (((clase.getLocation().x + evt.getX() - clase.getWidth() / 2) < 800)) {
                        if ((clase.getLocation().y + evt.getY() - clase.getWidth() / 2) > -15) {
                            if ((clase.getLocation().y + evt.getY() - clase.getWidth() / 2) < 520) {
                                clase.setLocation(clase.getLocation().x + evt.getX() - clase.getWidth() / 2,
                                        clase.getLocation().y + evt.getY() - clase.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        paneluml.repaint();
        listatrees.add(clase);


    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        // TODO add your handling code here:

        DefaultTreeModel modelo = (DefaultTreeModel) mayhemtreeactual.getModel();

        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();

        String Contenido = "";
        Contenido = cb_encasulamiento.getSelectedItem().toString() + ": " + cb_tipouml.getSelectedItem().toString() + " " + tf_nombreatributo.getText() + ";";
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("Atributos")) {
                DefaultMutableTreeNode nuevo = new DefaultMutableTreeNode(Contenido);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(nuevo);
            }
        }
        JOptionPane.showMessageDialog(atributosuml, "Atributo Guardado Exitosamente");
        tf_nombreatributo.setText("");


    }//GEN-LAST:event_jButton9MouseClicked

    private void atributoaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atributoaddMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_atributoaddMouseClicked

    private void atributoaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atributoaddActionPerformed
        // TODO add your handling code here:
        atributosuml.setModal(true);
        atributosuml.pack();
        atributosuml.setLocationRelativeTo(this);
        atributosuml.setVisible(true);
    }//GEN-LAST:event_atributoaddActionPerformed

    private void metodoaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoaddActionPerformed
        // TODO add your handling code here:
        metodosuml.setModal(true);
        metodosuml.pack();
        metodosuml.setLocationRelativeTo(this);
        metodosuml.setVisible(true);
    }//GEN-LAST:event_metodoaddActionPerformed

    private void agregarmetodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarmetodoMouseClicked
        // TODO add your handling code here:
        DefaultTreeModel modelArbol = (DefaultTreeModel) mayhemtreeactual.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelArbol.getRoot();
        String contenido = cb_encasulamiento1.getSelectedItem().toString() + ": " + cb_tipouml1.getSelectedItem().toString() + " " + jt_nom.getText() + "(" + jt_parametro.getText() + ");";
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if (raiz.getChildAt(i).toString().equals("Metodos")) {
                DefaultMutableTreeNode nuevo = new DefaultMutableTreeNode(contenido);
                ((DefaultMutableTreeNode) raiz.getChildAt(i)).add(nuevo);
            }
        }

        JOptionPane.showMessageDialog(metodosuml, "Método Guardado Exitosamente");
        jt_nom.setText("");
        jt_parametro.setText("");
        metodosuml.setVisible(false);

    }//GEN-LAST:event_agregarmetodoMouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        // TODO add your handling code here:

        String codigo = "";

        for (JTree t : listatrees) {

            CodigoA co = new CodigoA(t);
            codigo += co.codigo();

            codigo += "\n"
                    + "____________________________________________________________\n";

        }

        tp_codigoclases.setText(codigo);

        codigoclases.setModal(true);
        codigoclases.pack();
        codigoclases.setLocationRelativeTo(this);
        codigoclases.setVisible(true);
    }//GEN-LAST:event_jButton11MouseClicked

    private void colorumlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorumlActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jddiagramaflujo, "Seleccione Color", Color.yellow);

        mayhemtreeactual.setBackground(cl);


    }//GEN-LAST:event_colorumlActionPerformed

    private void claseumlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claseumlActionPerformed
        // TODO add your handling code here:

        DefaultTreeModel model = (DefaultTreeModel) mayhemtreeactual.getModel();

        listatrees.remove(mayhemtreeactual);
        paneluml.remove(mayhemtreeactual);

        paneluml.repaint();
    }//GEN-LAST:event_claseumlActionPerformed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        // TODO add your handling code here:
        JLabel sep = new JLabel();
        //Condicional rombo = new Condicional();
        // name.setPreferredSize(new Dimension(50, 100));
        paneluml.add(sep);
        sep.setLocation(20, 210);

        sep.setBackground(Color.red);
        sep.setHorizontalTextPosition(SwingConstants.CENTER);
        sep.setName("MAyhem" + cof);
        sep.setOpaque(true);
        sep.setIcon(new javax.swing.ImageIcon("./src/Iconitos/separador.png"));
        sep.setMaximumSize(new java.awt.Dimension(30, 30));
        sep.setMinimumSize(new Dimension(60, 20));
        sep.setLocation(new Point(30, 30));
        sep.setPreferredSize(new Dimension(40, 40));
        sep.setSize(50, 50);

        sep.setBounds(460, 250, 10, 110);

        sep.setToolTipText("Click derecho para propiedades");
        sep.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((sep.getLocation().x + evt.getX() - sep.getWidth() / 2) >= 0
                        && (sep.getLocation().x + evt.getX() - sep.getWidth() / 2) <= 1200) {

                    sep.setLocation(sep.getLocation().x + evt.getX() - sep.getWidth() / 2,
                            sep.getLocation().y + evt.getY() - sep.getHeight() / 2);

                }// para que no se salga del rango

            }
        });

        sep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                if (evtr.isMetaDown()) {
                  
                    sepactual = sep;
                    pp_sep.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                }
            }
        });


    }//GEN-LAST:event_jButton10MouseClicked

    private void ColorsepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorsepActionPerformed
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(Diagrama_UML, "Color para separador", Color.yellow);

        sepactual.setBackground(cl);
    }//GEN-LAST:event_ColorsepActionPerformed

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        // TODO add your handling code here:
        JLabel sep = new JLabel();
        //Condicional rombo = new Condicional();
        // name.setPreferredSize(new Dimension(50, 100));
        paneluml.add(sep);
        sep.setLocation(20, 210);

        sep.setBackground(Color.red);
        sep.setHorizontalTextPosition(SwingConstants.CENTER);
        sep.setName("MAyhem" + cof);
        sep.setOpaque(true);
        sep.setIcon(new javax.swing.ImageIcon("./src/Iconitos/separadorV.png"));
        sep.setMaximumSize(new java.awt.Dimension(30, 30));
        sep.setMinimumSize(new Dimension(60, 20));
        sep.setLocation(new Point(30, 30));
        sep.setPreferredSize(new Dimension(40, 40));
        sep.setSize(50, 50);

        sep.setBounds(410, 210, 100, 10);

        sep.setToolTipText("Click derecho para propiedades");
        sep.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((sep.getLocation().x + evt.getX() - sep.getWidth() / 2) >= 0
                        && (sep.getLocation().x + evt.getX() - sep.getWidth() / 2) <= 1200) {

                    sep.setLocation(sep.getLocation().x + evt.getX() - sep.getWidth() / 2,
                            sep.getLocation().y + evt.getY() - sep.getHeight() / 2);

                }// para que no se salga del rango

            }
        });

        sep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                sepactual = sep;
                if (evtr.isMetaDown()) {
                   
                    pp_sep.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                }
            }
        });
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        // TODO add your handling code here:
        jd_herencia.setModal(true);
        jd_herencia.pack();
        jd_herencia.setLocationRelativeTo(this);
        jd_herencia.setVisible(true);
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        // TODO add your handling code here

        DefaultListModel modelo = (DefaultListModel) jl_herencia1.getModel();
        DefaultListModel modelo2 = (DefaultListModel) jl_herencia2.getModel();

        modelo.removeAllElements();
        modelo2.removeAllElements();
        for (JTree y : listatrees) {
            DefaultTreeModel moda = (DefaultTreeModel) y.getModel();
            modelo.addElement(moda.getRoot());
            modelo2.addElement(moda.getRoot());
            // mod.addElement(y);

        }


    }//GEN-LAST:event_jButton14MouseClicked

    private void bt_hacerherenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_hacerherenciaMouseClicked
        // TODO add your handling code here:

        int poshijo = jl_herencia2.getSelectedIndex();
        int posppadre = jl_herencia1.getSelectedIndex();

        listatrees.get(poshijo).setName(listatrees.get(poshijo).getName() + "," + listatrees.get(posppadre).getName());

        JOptionPane.showMessageDialog(jd_herencia, "Herencia asignada con exito");


    }//GEN-LAST:event_bt_hacerherenciaMouseClicked

    private void GuardarcomodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarcomodActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama Mayhem", "myhm");
        jfc.addChoosableFileFilter(filtro);
        //jfc.setSelectedFile(new File(universo.getNombre()+".txt"));
        int seleccion = jfc.showSaveDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {

                // if (jfc.getFileFilter().getDescription().equals("Diagrama Mayhem")) {
                AdminFlujo af = new AdminFlujo(jfc.getSelectedFile().getPath() + ".myhm");
                ruta = jfc.getSelectedFile().getPath() + ".myhm";
                af.setListaf(listafiguras);
                af.escribirArchivo();
              
                JOptionPane.showMessageDialog(jddiagramaflujo, "Diagrama guardado exitosamente");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_GuardarcomodActionPerformed

    private void AbrirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirdActionPerformed
        // TODO add your handling code here:
      
        panelfiguras.removeAll();
        panelfiguras.repaint();
        panelfiguras.setLayout(null);
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama Mayhem", "myhm");
        jfc.addChoosableFileFilter(filtro);
        //jfc.setSelectedFile(new File(universo.getNombre()+".txt"));
        int seleccion = jfc.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            jb_ovalo.setEnabled(true);
            Imprimirdf.setEnabled(true);
            jb_paralelogramo.setEnabled(true);
            jb_resultado.setEnabled(true);
            jb_rombo.setEnabled(true);
            jb_rectangulo.setEnabled(true);
            jb_vertical.setEnabled(true);
            contovalo = 0;
            Gestor_bt.setEnabled(true);
            jb_derecha.setEnabled(true);
            jb_izquierda.setEnabled(true);
            bt_cerrarciclo.setEnabled(true);
            jButton3.setEnabled(true);
            bt_codigo.setEnabled(true);
            jMenuItem1.setEnabled(true);
            Guardarcomod.setEnabled(true);
            guardarf.setEnabled(true);
            try {

                AdminFlujo af = new AdminFlujo(jfc.getSelectedFile().getPath());
                ruta = jfc.getSelectedFile().getPath();

                af.cargararchivo();
                listafiguras = new ArrayList();
                for (Figura t : af.getListaf()) {
                    abrirmover_diagramas(t);
                    panelfiguras.repaint();
                }

                JOptionPane.showMessageDialog(jddiagramaflujo, "Diagrama abierto exitosamente");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_AbrirdActionPerformed

    public void abrirmover_diagramas(Figura f) {

        if (f instanceof Condicional) {

            Condicional rombo = (Condicional) f;
            rombo.setName("Condiciona" + cof);
            cof++;
            panelfiguras.add(rombo);
            rombo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2) >= 0
                            && (rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2) <= 1200) {

                        rombo.setLocation(rombo.getLocation().x + evt.getX() - rombo.getWidth() / 2,
                                rombo.getLocation().y + evt.getY() - rombo.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });

            rombo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    temprombo = rombo;
                    copiar = temprombo;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                        jpp_rombo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        temprombo = rombo;
                        rombo.setText(temprombo.getText());
                        rombo.setBackground(temprombo.getBackground());
                        rombo.setTipo(temprombo.getTipo());

                        //Recorrer
                        if (rombo.isAgregado()) {

                            for (JLabel t : listafiguras) {
                                if (t.getName().equals(rombo.getName())) {

                                    t.setText(temprombo.getText());
                                    ((Condicional) t).setTipo(temprombo.getTipo());
                                    t.setBackground(temprombo.getBackground());
                                    //((Entrada_Salida) t).setListva(temprombo.getListva());
                                } else {
                                    //JOptionPane.showMessageDialog( "No");

                                }
                            }
                        }
                    }
                }
            });
            listafiguras.add(rombo);

            panelfiguras.repaint();

        } else if (f instanceof FinCiclo) {
            listafiguras.add(f);

        } else if (f instanceof Flecha) {
            Flecha name = (Flecha) f;
            panelfiguras.add(name);
            name.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((name.getLocation().x + evt.getX() - name.getWidth() / 2) >= 0
                            && (name.getLocation().x + evt.getX() - name.getWidth() / 2) <= 1200) {

                        name.setLocation(name.getLocation().x + evt.getX() - name.getWidth() / 2,
                                name.getLocation().y + evt.getY() - name.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });

            name.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    tempflecha = name;
                    copiar = tempflecha;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                        ppflecha.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempflecha = name;

                    }
                }
            });
            panelfiguras.repaint();

            listafiguras.add(name);
        }
        if (f instanceof Entrada_Salida) {
            System.out.println("nohola");
            Entrada_Salida Paralelogramo = (Entrada_Salida) f;

            Paralelogramo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {

                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2) >= 0
                            && (Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2) <= 1200) {

                        Paralelogramo.setLocation(Paralelogramo.getLocation().x + evt.getX() - Paralelogramo.getWidth() / 2,
                                Paralelogramo.getLocation().y + evt.getY() - Paralelogramo.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });

            Paralelogramo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    templabelparalelogramo = Paralelogramo;
                    copiar = templabelparalelogramo;
                    // panelfiguras.re
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                        copiar = Paralelogramo;
                        jpp_paralelogramo.show(evtr.getComponent(), evtr.getX(), evtr.getY());

                        //Paralelogramo.setText(templabelparalelogramo.getText());
                        // Paralelogramo.setBackground(templabelparalelogramo.getBackground());
                        //Paralelogramo.setListva(templabelparalelogramo.getListva());
                        if (Paralelogramo.isAgregado()) {

                            for (JLabel t : listafiguras) {
                                if (t.getName().equals(Paralelogramo.getName())) {

                                    t.setText(templabelparalelogramo.getText());
                                    t.setBackground(templabelparalelogramo.getBackground());
                                    ((Entrada_Salida) t).setListva(templabelparalelogramo.getListva());
                                } else {
                                    //JOptionPane.showMessageDialog( "No");

                                }
                            }
                        } else {
                            listafiguras.add(Paralelogramo);
                        }

                    }//Fin click dereco
                }
            });//Fin agreagar omouse listener
            panelfiguras.add(Paralelogramo);
            panelfiguras.repaint();
            listafiguras.add(Paralelogramo);
        } else if (f instanceof Flechad) {
            Flechad derecha = (Flechad) f;
            panelfiguras.add(derecha);
            derecha.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2) >= 0
                            && (derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2) <= 1200) {

                        derecha.setLocation(derecha.getLocation().x + evt.getX() - derecha.getWidth() / 2,
                                derecha.getLocation().y + evt.getY() - derecha.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });
            derecha.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    copiar = tempflechad;
                    tempflechad = derecha;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                        copiar = tempflechad;
                        ppflechad.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempflechad = derecha;

                    }
                }
            });
            panelfiguras.repaint();
            listafiguras.add(derecha);
        }//Fin if de flecha d
        else if (f instanceof Flechai) {
            Flechai izquierda = (Flechai) f;
            panelfiguras.add(izquierda);
            izquierda.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2) >= 0
                            && (izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2) <= 1200) {

                        izquierda.setLocation(izquierda.getLocation().x + evt.getX() - izquierda.getWidth() / 2,
                                izquierda.getLocation().y + evt.getY() - izquierda.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });
            izquierda.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    tempflechai = izquierda;
                    copiar = tempflechai;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                        copiar = tempflechai;
                        ppflechai.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempflechai = izquierda;

                    }
                }
            });
            listafiguras.add(izquierda);
            panelfiguras.repaint();
        }//Fn if izquierda
        else if (f instanceof Imprimir) {
            Imprimir resultado = (Imprimir) f;
            panelfiguras.add(resultado);
            resultado.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                @Override
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    if ((resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2) >= 0
                            && (resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2) <= 1200) {

                        resultado.setLocation(resultado.getLocation().x + evt.getX() - resultado.getWidth() / 2,
                                resultado.getLocation().y + evt.getY() - resultado.getHeight() / 2);

                    }// para que no se salga del rango

                }
            });
            resultado.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evtr) {
                    copiar = tempresultado;
                    if (evtr.isMetaDown()) {
                        //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();
                        copiar = tempresultado;
                        jpp_resultado.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                        tempresultado = resultado;
                        resultado.setText(tempresultado.getText());
                        resultado.setBackground(tempresultado.getBackground());

                        //Recorrer
                        if (resultado.isAgregado()) {

                            for (JLabel t : listafiguras) {
                                if (t.getName().equals(resultado.getName())) {

                                    t.setText(tempresultado.getText());

                                    t.setBackground(tempresultado.getBackground());
                                    //((Entrada_Salida) t).setListva(temprombo.getListva());
                                } else {
                                    //JOptionPane.showMessageDialog( "No");

                                }
                            }
                        } else {
                            listafiguras.add(resultado);
                        }

                    }
                }
            });
            panelfiguras.repaint();
            listafiguras.add(resultado);

        }//Fin imprimir
        else if (f instanceof Inicio) {
            if (contovalo == 0) {
                Inicio Ovalo = (Inicio) f;
                panelfiguras.add(Ovalo);
                Ovalo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                    @Override
                    public void mouseDragged(java.awt.event.MouseEvent evt) {
                        if ((Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) >= 0
                                && (Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) <= 1200) {

                            Ovalo.setLocation(Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2,
                                    Ovalo.getLocation().y + evt.getY() - Ovalo.getHeight() / 2);

                        }// para que no se salga del rango

                    }
                });

                Ovalo.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evtr) {
                        tempovalo = Ovalo;
                        copiar = tempovalo;
                        if (evtr.isMetaDown()) {
                            //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                            jpp_ovalo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                            tempovalo = Ovalo;

                        }
                    }
                });
                listafiguras.add(Ovalo);
                panelfiguras.repaint();

                //Ovalo.setBackground(tempovalo.getBackground());
                contovalo++;

            } else if (contovalo == 1) {
                Inicio Ovalo = (Inicio) f;
                panelfiguras.add(Ovalo);
                Ovalo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                    @Override
                    public void mouseDragged(java.awt.event.MouseEvent evt) {
                        if ((Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) >= 0
                                && (Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2) <= 1200) {

                            Ovalo.setLocation(Ovalo.getLocation().x + evt.getX() - Ovalo.getWidth() / 2,
                                    Ovalo.getLocation().y + evt.getY() - Ovalo.getHeight() / 2);

                        }// para que no se salga del rango

                    }
                });

                Ovalo.addMouseListener(new java.awt.event.MouseAdapter() {

                    public void mouseClicked(java.awt.event.MouseEvent evtr) {
                        tempovalo = Ovalo;
                        copiar = tempovalo;
                        if (evtr.isMetaDown()) {
                            //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                            jpp_ovalo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                            tempovalo = Ovalo;

                        }
                    }
                });
                listafiguras.add(Ovalo);
                panelfiguras.repaint();
                contovalo++;

            } else {
                JOptionPane.showMessageDialog(jddiagramaflujo, "Ya no puede ingresar mas de este tipo");
            }
        }else if(f instanceof Procesos){
            Procesos rectangulo=(Procesos) f;
            panelfiguras.add(rectangulo);
            rectangulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                if ((rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2) >= 0
                        && (rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2) <= 1200) {

                    rectangulo.setLocation(rectangulo.getLocation().x + evt.getX() - rectangulo.getWidth() / 2,
                            rectangulo.getLocation().y + evt.getY() - rectangulo.getHeight() / 2);

                }// para que no se salga del rango

            }
        });
        rectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                copiar = temprectangulo;
                if (evtr.isMetaDown()) {
                    //javax.swing.JPopupMenu jpp_paralelogramo1 = new javax.swing.JPopupMenu();

                    jpp_rectangulo.show(evtr.getComponent(), evtr.getX(), evtr.getY());
                    temprectangulo = rectangulo;
                    rectangulo.setText(temprectangulo.getText());
                    rectangulo.setBackground(temprectangulo.getBackground());
                    //Recorrer
                    if (rectangulo.isAgregado()) {

                        for (JLabel t : listafiguras) {
                            if (t.getName().equals(rectangulo.getName())) {

                                t.setText(temprectangulo.getText());
                                //((Condicional)t).setTipo(temprectangulo.getTipo());
                                t.setBackground(temprectangulo.getBackground());
                                //((Entrada_Salida) t).setListva(temprombo.getListva());
                            } else {
                                //JOptionPane.showMessageDialog( "No");

                            }
                        }
                    } else {
                        listafiguras.add(rectangulo);
                    }

                }
            }
        });
        panelfiguras.repaint();
        listafiguras.add(rectangulo);
            
            
            
        }

    }//Fin metodo


    private void NeuvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NeuvodActionPerformed
        // TODO add your handling code here:
        nombrediagramaflujo = JOptionPane.showInputDialog(jddiagramaflujo, "Ingrese nombre del diagrama");
        nombretotal = nombrediagramaflujo;
        JOptionPane.showMessageDialog(jddiagramaflujo, "Nuevo");

        panelfiguras.removeAll();
        panelfiguras.setLayout(null);
        listafiguras = new ArrayList();
        panelfiguras.repaint();
        guardarf.setEnabled(true);
        jb_ovalo.setEnabled(true);
        Imprimirdf.setEnabled(true);
        jb_paralelogramo.setEnabled(true);
        jb_resultado.setEnabled(true);
        jb_rombo.setEnabled(true);
        Gestor_bt.setEnabled(true);
        jb_rectangulo.setEnabled(true);
        jb_vertical.setEnabled(true);
        jb_derecha.setEnabled(true);
        jb_izquierda.setEnabled(true);
        bt_cerrarciclo.setEnabled(true);
        jButton3.setEnabled(true);
        bt_codigo.setEnabled(true);
        jMenuItem1.setEnabled(true);
        Guardarcomod.setEnabled(true);
        contovalo = 0;


    }//GEN-LAST:event_NeuvodActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        try {

            AdminFlujo af = new AdminFlujo(ruta);
            af.setListaf(listafiguras);
            af.escribirArchivo();
            JOptionPane.showMessageDialog(this, "Diagrama guardado exitosamente");

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        // TODO add your handling code here:

        ruta = "";

        paneluml.removeAll();
        listatrees = new ArrayList();
        paneluml.repaint();

        nombretotal = JOptionPane.showInputDialog(Diagrama_UML, "Ingrese nombre del diagrama");

        guradacomo.setEnabled(true);
        gu.setEnabled(true);
        imprimirdc.setEnabled(true);
        gft.setEnabled(true);
        jButton8.setEnabled(true);
        jButton11.setEnabled(true);
        jButton13.setEnabled(true);
        jButton10.setEnabled(true);
        jButton12.setEnabled(true);
    }//GEN-LAST:event_NuevoActionPerformed

    private void guradacomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guradacomoActionPerformed
        // TODO add your handling code here:

        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama Marduk", "mrk");
        jfc.addChoosableFileFilter(filtro);

        //jfc.setSelectedFile(new File(universo.getNombre()+".txt"));
        int seleccion = jfc.showSaveDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {

                //  if (jfc.getFileFilter().getDescription().equals("Diagrama Marduk")) {
                AdminClases af = new AdminClases(jfc.getSelectedFile().getPath() + ".mrk");
                ruta = jfc.getSelectedFile().getPath() + ".mrk";
                af.setListaf(listatrees);
                af.escribirArchivo();
                //archivo = new File(jfc.getSelectedFile().getPath() + ".myhm");
                //ruta = jfc.getSelectedFile().getPath();

                JOptionPane.showMessageDialog(this, "Diagrama guardado exitosamente");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_guradacomoActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Diagrama Marduk", "mrk");
        jfc.addChoosableFileFilter(filtro);
        //jfc.setSelectedFile(new File(universo.getNombre()+".txt"));
        int seleccion = jfc.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            guradacomo.setEnabled(true);
            gu.setEnabled(true);
            gft.setEnabled(true);
            jButton8.setEnabled(true);
            jButton11.setEnabled(true);
            jButton13.setEnabled(true);
            jButton10.setEnabled(true);
            imprimirdc.setEnabled(true);
            jButton12.setEnabled(true);
            try {

                // if (jfc.getFileFilter().getDescription().equals("Diagrama Marduk")) {
                System.out.println(jfc.getSelectedFile().getPath());
                AdminClases af = new AdminClases(jfc.getSelectedFile().getPath());
                ruta = jfc.getSelectedFile().getPath();

                af.cargararchivo();
                listatrees = new ArrayList();
                for (JTree t : af.getListaf()) {
                    //paneluml.add(t);
                    moveruml(t);
                    //paneluml.repaint();

                }

                //archivo = new File(jfc.getSelectedFile().getPath() + ".myhm");
                //ruta = jfc.getSelectedFile().getPath();
                JOptionPane.showMessageDialog(this, "Diagrama abierto exitosamente");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_AbrirActionPerformed

    private void gftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gftActionPerformed
        // TODO add your handling code here:
        Guardarpic gp = new Guardarpic(paneluml, nombretotal);
        gp.Creacion();
        gp.Escribirla();
    }//GEN-LAST:event_gftActionPerformed

    private void bt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_codigoActionPerformed

    private void guardarfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarfActionPerformed
        // TODO add your handling code here:
        Guardarpic gp = new Guardarpic(panelfiguras, nombretotal);
        gp.Creacion();
        gp.Escribirla();
    }//GEN-LAST:event_guardarfActionPerformed

    private void ImprimirdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirdfActionPerformed
        // TODO add your handling code here:

        PrinterJob imprimir = PrinterJob.getPrinterJob();
        Guardarpic eleccion = new Guardarpic(panelfiguras, nombretotal);

        eleccion.Creacion();
        imprimir.setPrintable(new Imprimirpanel(imprimir, eleccion.getImagen()));
        if (imprimir.printDialog()) {
            try {
                imprimir.print();
            } catch (PrinterException prt) {
                prt.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "Impresión realizada correctamente.", "Impresión", 1);
    }//GEN-LAST:event_ImprimirdfActionPerformed

    private void imprimirdcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirdcActionPerformed
        // TODO add your handling code here:
        PrinterJob imprimir = PrinterJob.getPrinterJob();
        Guardarpic eleccion = new Guardarpic(paneluml, nombretotal);

        eleccion.Creacion();
        imprimir.setPrintable(new Imprimirpanel(imprimir, eleccion.getImagen()));
        if (imprimir.printDialog()) {
            try {
                imprimir.print();
            } catch (PrinterException prt) {
                prt.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "Impresión realizada correctamente.", "Impresión", 1);
    }//GEN-LAST:event_imprimirdcActionPerformed

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseClicked
        // TODO add your handling code here:
        jl_gestor1.setModel(new DefaultListModel());
        jl_gestor2.setModel(new DefaultListModel());

        DefaultListModel modelo1 = (DefaultListModel) jl_gestor1.getModel();
        DefaultListModel modelo2 = (DefaultListModel) jl_gestor2.getModel();

        for (JLabel o : listafiguras) {
            modelo1.addElement(o);
            modelo2.addElement(o);
        }

        jl_gestor1.setModel(modelo1);
        jl_gestor1.setModel(modelo2);

        JOptionPane.showMessageDialog(jd_gestord, "Listas Actualizadas");


    }//GEN-LAST:event_jButton16MouseClicked

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton17MouseClicked
        // TODO add your handling code here:
        Figura temp = jl_gestor2.getSelectedValue();
        listafiguras.set(jl_gestor2.getSelectedIndex(), jl_gestor1.getSelectedValue());
        listafiguras.set(jl_gestor1.getSelectedIndex(), temp);

        JOptionPane.showMessageDialog(jd_gestord, "Cambio realizado con exito");
    }//GEN-LAST:event_jButton17MouseClicked

    private void Gestor_btMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Gestor_btMouseClicked
        // TODO add your handling code here:
        jd_gestord.setModal(true);
        jd_gestord.pack();
        jd_gestord.setLocationRelativeTo(this);
        jd_gestord.setVisible(true);


    }//GEN-LAST:event_Gestor_btMouseClicked

    private void EliminarparalelogramoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarparalelogramoActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(templabelparalelogramo);
        panelfiguras.repaint();
        listafiguras.remove(templabelparalelogramo);

    }//GEN-LAST:event_EliminarparalelogramoActionPerformed

    private void eliminarovaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarovaloActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(tempovalo);
        panelfiguras.repaint();
        listafiguras.remove(tempovalo);
        contovalo--;

    }//GEN-LAST:event_eliminarovaloActionPerformed

    private void eliminarromboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarromboActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(temprombo);
        panelfiguras.repaint();
        listafiguras.remove(temprombo);
    }//GEN-LAST:event_eliminarromboActionPerformed

    private void eliminarrombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrombo1ActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(temprectangulo);
        panelfiguras.repaint();
        listafiguras.remove(temprectangulo);
    }//GEN-LAST:event_eliminarrombo1ActionPerformed

    private void eliminarrombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrombo2ActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(tempresultado);
        panelfiguras.repaint();
        listafiguras.remove(tempresultado);
    }//GEN-LAST:event_eliminarrombo2ActionPerformed

    private void eliminarrombo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrombo3ActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(tempflecha);
        panelfiguras.repaint();
        listafiguras.remove(tempflecha);
    }//GEN-LAST:event_eliminarrombo3ActionPerformed

    private void eliminarrombo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrombo4ActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(tempflechad);
        panelfiguras.repaint();
        listafiguras.remove(tempflechad);


    }//GEN-LAST:event_eliminarrombo4ActionPerformed

    private void eliminarrombo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrombo5ActionPerformed
        // TODO add your handling code here:
        panelfiguras.remove(tempflechai);
        panelfiguras.repaint();
        listafiguras.remove(tempflechai);
    }//GEN-LAST:event_eliminarrombo5ActionPerformed

    private void copiardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiardActionPerformed
        // TODO add your handling code here:
        copiar = templabelparalelogramo;
    }//GEN-LAST:event_copiardActionPerformed

    private void panelfigurasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelfigurasMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
            pegar.show(evt.getComponent(), evt.getX(), evt.getY());
        }


    }//GEN-LAST:event_panelfigurasMouseClicked

    private void pegardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegardActionPerformed
        // TODO add your handling code here:

        panelfiguras.add(copiar);
        panelfiguras.repaint();
        //panelfiguras.setLayout(null);
    }//GEN-LAST:event_pegardActionPerformed

    private void copiard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_copiard1ActionPerformed

    private void copiard2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard2ActionPerformed

    private void copiard3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard3ActionPerformed

    private void copiard4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard4ActionPerformed

    private void copiard5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard5ActionPerformed

    private void copiard6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard6ActionPerformed

    private void copiard7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiard7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copiard7ActionPerformed

    private void pegard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegard1ActionPerformed
        // TODO add your handling code here:
        paneluml.add(copiar1);
        paneluml.repaint();
    }//GEN-LAST:event_pegard1ActionPerformed

    private void panelumlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelumlMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
            pegar1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_panelumlMouseClicked

    private void elomiarcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elomiarcActionPerformed
        // TODO add your handling code here:
        paneluml.remove(mayhemtreeactual);
        paneluml.repaint();
        listatrees.remove(mayhemtreeactual);
    }//GEN-LAST:event_elomiarcActionPerformed

    private void Fuente_paralelogramoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fuente_paralelogramoActionPerformed
        // TODO add your handling code here:
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
        flagofhate = 1;
    }//GEN-LAST:event_Fuente_paralelogramoActionPerformed

    private void jButton19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseClicked
        // TODO add your handling code here:
        if (flagofhate == 1) {
            String[] fue = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
            fd = (String) JOptionPane.showInputDialog(jd_fuentes, "Eleccion", "Fuentes", 3, null, fue, fue[0]);
            copiar.setFont(new java.awt.Font(fd, 1, (Integer) sp_tamaño.getValue()));
            copiar.setForeground(colorboton1.getBackground());
            this.repaint();
        } else if (flagofhate == 2) {
            String[] fu = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
            fd = (String) JOptionPane.showInputDialog(jd_fuentes, "Eleccion", "Fuentes", 3, null, fu, fu[0]);
            copiar1.setFont(new java.awt.Font(fd, 1, (Integer) sp_tamaño.getValue()));
            copiar1.setForeground(colorboton1.getBackground());
            this.repaint();
        }
    }//GEN-LAST:event_jButton19MouseClicked

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void colorboton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorboton1MouseClicked
        // TODO add your handling code here:
        Color cl = JColorChooser.showDialog(jd_fuentes, "Seleccionar", Color.BLACK);
        colorboton1.setBackground(cl);
    }//GEN-LAST:event_colorboton1MouseClicked

    private void Fuente_ovaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fuente_ovaloActionPerformed
        // TODO add your handling code here:
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        flagofhate = 1;
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
    }//GEN-LAST:event_Fuente_ovaloActionPerformed

    private void Fuente_romboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fuente_romboActionPerformed
        // TODO add your handling code here:
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        flagofhate = 1;
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
    }//GEN-LAST:event_Fuente_romboActionPerformed

    private void Fuente_rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fuente_rectanguloActionPerformed
        // TODO add your handling code here:
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        flagofhate = 1;
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
    }//GEN-LAST:event_Fuente_rectanguloActionPerformed

    private void Fuente_resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fuente_resultadoActionPerformed
        // TODO add your handling code here:
        flagofhate = 1;
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
    }//GEN-LAST:event_Fuente_resultadoActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseClicked
        // TODO add your handling code here:
        this.jd_opcion.setModal(true);
        jd_opcion.pack();
        jd_opcion.setLocationRelativeTo(this);
        jd_opcion.setVisible(true);
    }//GEN-LAST:event_jButton20MouseClicked

    private void fuentecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuentecActionPerformed
        // TODO add your handling code here:
        flagofhate = 2;
        jd_fuentes.setModal(true);
        jd_fuentes.pack();
        jd_fuentes.setLocationRelativeTo(this);
        jd_fuentes.setVisible(true);
        sp_tamaño.setValue(0);
        colorboton1.setBackground(Color.BLACK);
    }//GEN-LAST:event_fuentecActionPerformed

    private void guActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guActionPerformed
        // TODO add your handling code here:

        AdminClases af = new AdminClases(ruta);

        af.setListaf(listatrees);
        try {
            af.escribirArchivo();
            //archivo = new File(jfc.getSelectedFile().getPath() + ".myhm");
            //ruta = jfc.getSelectedFile().getPath();
        } catch (IOException ex) {

        }

        JOptionPane.showMessageDialog(this, "Diagrama guardado exitosamente");
    }//GEN-LAST:event_guActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenuItem Abrird;
    private javax.swing.JMenuItem Colorsep;
    private javax.swing.JDialog Condicional_mientras;
    private javax.swing.JDialog Diagrama_UML;
    private javax.swing.JMenuItem Eliminarparalelogramo;
    private javax.swing.JMenuItem Fuente_ovalo;
    private javax.swing.JMenuItem Fuente_paralelogramo;
    private javax.swing.JMenuItem Fuente_rectangulo;
    private javax.swing.JMenuItem Fuente_resultado;
    private javax.swing.JMenuItem Fuente_rombo;
    private javax.swing.JButton Gestor_bt;
    private javax.swing.JMenuItem Guardarcomod;
    private javax.swing.JMenuItem Imprimirdf;
    private javax.swing.JMenuItem Neuvod;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JButton agregarmetodo;
    private javax.swing.JMenuItem atributoadd;
    private javax.swing.JDialog atributosuml;
    private javax.swing.JButton bt_cerrarciclo;
    private javax.swing.JButton bt_codigo;
    private javax.swing.JButton bt_hacerherencia;
    private javax.swing.JComboBox<String> cb_condicion;
    private javax.swing.JComboBox<String> cb_encasulamiento;
    private javax.swing.JComboBox<String> cb_encasulamiento1;
    private javax.swing.JComboBox<String> cb_tiposvariable;
    private javax.swing.JComboBox<String> cb_tipouml;
    private javax.swing.JComboBox<String> cb_tipouml1;
    private javax.swing.JMenuItem claseuml;
    private javax.swing.JDialog codigoclases;
    private javax.swing.JButton colorboton1;
    private javax.swing.JMenuItem coloruml;
    private javax.swing.JMenuItem copiarclase;
    private javax.swing.JMenuItem copiard;
    private javax.swing.JMenuItem copiard1;
    private javax.swing.JMenuItem copiard2;
    private javax.swing.JMenuItem copiard3;
    private javax.swing.JMenuItem copiard4;
    private javax.swing.JMenuItem copiard5;
    private javax.swing.JMenuItem copiard6;
    private javax.swing.JMenuItem copiard7;
    private javax.swing.JMenuItem eliminarovalo;
    private javax.swing.JMenuItem eliminarrombo;
    private javax.swing.JMenuItem eliminarrombo1;
    private javax.swing.JMenuItem eliminarrombo2;
    private javax.swing.JMenuItem eliminarrombo3;
    private javax.swing.JMenuItem eliminarrombo4;
    private javax.swing.JMenuItem eliminarrombo5;
    private javax.swing.JMenuItem elomiarc;
    private javax.swing.JMenuItem fuentec;
    private javax.swing.JMenuItem gft;
    private javax.swing.JMenuItem gu;
    private javax.swing.JMenuItem guardarf;
    private javax.swing.JMenuItem guradacomo;
    private javax.swing.JLabel imagen2;
    private javax.swing.JLabel imagen3;
    private javax.swing.JMenuItem imprimirdc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton jb_derecha;
    private javax.swing.JButton jb_diagramaflujonuevo;
    private javax.swing.JButton jb_izquierda;
    private javax.swing.JButton jb_ovalo;
    private javax.swing.JButton jb_paralelogramo;
    private javax.swing.JButton jb_rectangulo;
    private javax.swing.JButton jb_resultado;
    private javax.swing.JButton jb_rombo;
    private javax.swing.JButton jb_vertical;
    private javax.swing.JDialog jd_asignarvariable;
    private javax.swing.JDialog jd_asignarvariableresultado;
    private javax.swing.JDialog jd_codigogenerado;
    private javax.swing.JDialog jd_fuentes;
    private javax.swing.JDialog jd_gestord;
    private javax.swing.JDialog jd_herencia;
    private javax.swing.JDialog jd_opcion;
    private javax.swing.JDialog jddiagramaflujo;
    private javax.swing.JList<Figura> jl_gestor1;
    private javax.swing.JList<Figura> jl_gestor2;
    private javax.swing.JList<JTree> jl_herencia1;
    private javax.swing.JList<String> jl_herencia2;
    private javax.swing.JList<Variable> jl_variables;
    private javax.swing.JList<Variable> jl_variables1;
    private javax.swing.JList<Variable> jl_variables2;
    private javax.swing.JMenuItem jpp_color_ovalo;
    private javax.swing.JMenuItem jpp_color_paralelogramo;
    private javax.swing.JMenuItem jpp_color_rectangulo;
    private javax.swing.JMenuItem jpp_color_resultado;
    private javax.swing.JMenuItem jpp_color_rombo;
    private javax.swing.JPopupMenu jpp_ovalo;
    private javax.swing.JPopupMenu jpp_paralelogramo;
    private javax.swing.JPopupMenu jpp_rectangulo;
    private javax.swing.JPopupMenu jpp_resultado;
    private javax.swing.JPopupMenu jpp_rombo;
    private javax.swing.JMenuItem jpp_text0_resultado;
    private javax.swing.JMenuItem jpp_texto_paralelogramo;
    private javax.swing.JMenuItem jpp_texto_rectangulo;
    private javax.swing.JMenuItem jpp_texto_rombo;
    private javax.swing.JMenuItem jpp_tipo;
    private javax.swing.JMenuItem jpp_tipoimpresion;
    private javax.swing.JTextField jt_nom;
    private javax.swing.JTextField jt_parametro;
    private javax.swing.JTextField jt_textoi;
    private javax.swing.JMenuItem metodoadd;
    private javax.swing.JDialog metodosuml;
    private java.awt.Panel panel1;
    private javax.swing.JPanel panelfiguras;
    private javax.swing.JPanel paneluml;
    private javax.swing.JPopupMenu pegar;
    private javax.swing.JPopupMenu pegar1;
    private javax.swing.JMenuItem pegard;
    private javax.swing.JMenuItem pegard1;
    private javax.swing.JPopupMenu pop_Clases;
    private javax.swing.JPopupMenu pp_sep;
    private javax.swing.JPopupMenu ppflecha;
    private javax.swing.JPopupMenu ppflechad;
    private javax.swing.JPopupMenu ppflechai;
    private javax.swing.JSpinner sp_tamaño;
    private javax.swing.JTextField tf_nombreatributo;
    private javax.swing.JTextField tf_nombrevariable;
    private javax.swing.JTextPane tp_codigoclases;
    private javax.swing.JTextArea tp_codigodiagrama;
    private javax.swing.JDialog variables;
    // End of variables declaration//GEN-END:variables
int contovalo = 0;
    String nombrediagramaflujo = "", nombretotal = "";
    int cof = 0, marduk = 0;
    Icon icon = null;
    Object o = null;

    JTree mayhemtreeactual = new JTree();

    Entrada_Salida templabelparalelogramo = new Entrada_Salida();
    Inicio tempovalo = new Inicio();
    Condicional temprombo = new Condicional();
    Procesos temprectangulo = new Procesos();
    Imprimir tempresultado = new Imprimir();
    Flecha tempflecha = new Flecha();
    Flechad tempflechad = new Flechad();
    Flechai tempflechai = new Flechai();
    ArrayList listavariables = new ArrayList();
    ArrayList<Figura> listafiguras = new ArrayList();
    ArrayList<JTree> listatrees = new ArrayList();
    DefaultMutableTreeNode nodoblackactual;
    JLabel sepactual;
    JTree copiar1 = new JTree();
    Figura copiar = new Figura();
    String ruta = "";
    String fd = "Times New Roman";
    String fuml = "Times New Roman";
    int flagofhate;

    public void moveruml(JTree t) {

        //String nombrearbol = JOptionPane.showInputDialog(Diagrama_UML, "Ingrese el nombre de la clase");
        DefaultTreeModel m1 = (DefaultTreeModel) t.getModel();
        DefaultMutableTreeNode Root1 = new DefaultMutableTreeNode(m1.getRoot().toString());

        DefaultMutableTreeNode Root = new DefaultMutableTreeNode(Root1.toString());
        DefaultTreeModel modelo = new DefaultTreeModel(Root);
        JTree clase = new JTree(t.getModel());
        clase.setName(t.getName());
        // clase.set
        /* DefaultTreeModel m = (DefaultTreeModel) clase.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m1.getRoot();
        DefaultMutableTreeNode atributos = (DefaultMutableTreeNode) raiz.getChildAt(0);
        DefaultMutableTreeNode metodos = (DefaultMutableTreeNode)raiz.getChildAt(1);
        raiz.add(atributos);
        raiz.add(metodos);*/

        marduk++;
        clase.setSize(t.getSize());
        clase.setBackground(t.getBackground());
        clase.setBorder(t.getBorder());
        clase.setBounds(t.getBounds());

        clase.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evtr) {
                mayhemtreeactual = clase;
                int row = clase.getClosestRowForLocation(evtr.getX(), evtr.getY());
                clase.setSelectionRow(row);
                Object v1 = clase.getSelectionPath().getLastPathComponent();
                nodoblackactual = (DefaultMutableTreeNode) v1;
                for (JTree te : listatrees) {
                    if (clase.getName().equals(te.getName())) {
                        te = mayhemtreeactual;
                    }

                }
                if (evtr.isMetaDown()) {
                    pop_Clases.show(evtr.getComponent(), evtr.getX(), evtr.getY());

                }
            }
        });

        paneluml.add(clase);

        clase.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mayhemtreeactual = clase;
                //txSeleccionado1.setText(modelo.getRoot().toString());

                if (((clase.getLocation().x + evt.getX() - clase.getWidth() / 2) > 5)) {
                    if (((clase.getLocation().x + evt.getX() - clase.getWidth() / 2) < 800)) {
                        if ((clase.getLocation().y + evt.getY() - clase.getWidth() / 2) > -15) {
                            if ((clase.getLocation().y + evt.getY() - clase.getWidth() / 2) < 520) {
                                clase.setLocation(clase.getLocation().x + evt.getX() - clase.getWidth() / 2,
                                        clase.getLocation().y + evt.getY() - clase.getHeight() / 2);
                            }
                        }
                    }
                }
            }
        });
        paneluml.repaint();
        listatrees.add(clase);
    }

}//
